# -*- coding: utf-8 -*-

"""
@Author: xiezizhe
@Date: 10/8/2020 上午9:14
"""
from typing import List


class Solution:
    def maxSumDivThree(self, nums: List[int]) -> int:
        bucket = dict()
        bucket[0] = []
        bucket[1] = []
        bucket[2] = []
        for n in nums:
            bucket[n % 3].append(n)

        ret = sum(bucket[0])
        bucket[1].sort(reverse=True)
        bucket[2].sort(reverse=True)

        print(bucket)
        length = max(min(len(bucket[1]) // 3, len(bucket[2]) // 3) * 3 - 1, 0)
        if length > 0:
            ret += sum(bucket[1][:length]) + sum(bucket[2][:length])

        if len(bucket[1]) > len(bucket[2]):
            array1, array2 = bucket[2][length:], bucket[1][length:]
        else:
            array1, array2 = bucket[1][length:], bucket[2][length:]

        max_value = sum(array2[0:len(array2) // 3 * 3])
        if len(array1) > 0:
            remain = sum(array2[1:(len(array2) - 1) // 3 * 3 + 1])
            max_value = max(max_value, array2[0] + array1[0] + remain)
        if len(array1) > 1:
            remain = sum(array2[2:(len(array2) - 2) // 3 * 3 + 2])
            max_value = max(max_value, sum(array2[0:2]) + sum(array1[0:2]) + remain)
        if len(array1) > 2:
            remain = sum(array2[3:(len(array2) - 3) // 3 * 3 + 3])
            max_value = max(max_value, sum(array2[0:3]) + sum(array1[0:3]) + remain)
        if len(array1) > 3:
            remain = sum(array2[4:(len(array2) - 4) // 3 * 3 + 4])
            max_value = max(max_value, sum(array2[0:4]) + sum(array1[0:4]) + remain)

        ret += max_value
        return ret


if __name__ == "__main__":
    s = Solution()
    # 4939464
    print(s.maxSumDivThree(
        [9308, 3562, 7049, 3328, 5839, 1527, 7954, 6558, 5689, 4452, 1182, 5519, 6517, 1475, 6663, 6765, 2943, 9833,
         268, 4147, 6018, 6060, 9448, 3760, 3892, 8872, 6171, 5504, 1600, 3896, 9526, 3269, 8439, 8988, 472, 7372, 1667,
         7727, 1409, 281, 5828, 9631, 2912, 9812, 9416, 606, 3714, 1081, 8875, 7988, 845, 2531, 9618, 6164, 5891, 3105,
         3627, 8260, 8293, 9274, 7289, 2660, 7840, 7338, 57, 5836, 2979, 6555, 4710, 8219, 6156, 9288, 887, 4224, 7895,
         6890, 8109, 9046, 8845, 9328, 4434, 2949, 4842, 4961, 8336, 9319, 3037, 1082, 4278, 3655, 6525, 5159, 2103,
         1944, 4146, 5414, 250, 4162, 5880, 9178, 1160, 140, 4302, 486, 1970, 9788, 4716, 4674, 2981, 782, 2653, 1103,
         2387, 2350, 957, 1681, 939, 2509, 1462, 6494, 4633, 1129, 6604, 4657, 9199, 7802, 3910, 6668, 1438, 4091, 8601,
         7075, 799, 333, 7120, 3646, 8442, 1778, 9851, 6796, 5693, 7547, 9253, 6302, 2177, 1815, 8257, 8257, 842, 325,
         4236, 2114, 80, 172, 8972, 5106, 5514, 2620, 9130, 9743, 710, 4948, 1075, 361, 8741, 6119, 5575, 6706, 1957,
         4798, 2929, 1917, 1995, 8093, 2755, 8314, 7000, 8798, 105, 7864, 2481, 9367, 2772, 6705, 8018, 1380, 4648,
         4022, 4301, 974, 2372, 7117, 3359, 6121, 1545, 1590, 8488, 3470, 3666, 6650, 9901, 9878, 239, 3212, 1866, 6461,
         7674, 1076, 8565, 3371, 9476, 6704, 7555, 9941, 6489, 1657, 6802, 8826, 6985, 5152, 4965, 2099, 7103, 3545,
         8704, 9470, 2859, 1286, 8686, 7631, 4585, 6648, 4578, 702, 1276, 7361, 6223, 8228, 4550, 8231, 4039, 9267,
         1037, 3308, 4305, 8487, 487, 1980, 7040, 4280, 9105, 603, 6381, 3240, 4556, 5945, 6133, 4110, 7689, 7605, 7520,
         9134, 6829, 622, 8271, 8249, 5245, 7105, 2690, 7205, 558, 7996, 4388, 4407, 1211, 7525, 4481, 7084, 9667, 5380,
         4542, 8753, 5121, 9556, 4155, 5694, 4683, 1024, 5717, 2143, 3545, 9382, 8742, 8002, 6588, 5658, 3132, 915,
         5626, 1914, 1650, 481, 1329, 4511, 7051, 4473, 350, 7822, 5814, 3564, 8899, 8336, 588, 7525, 4480, 5712, 7689,
         5423, 6167, 6696, 8381, 4463, 2165, 9070, 1765, 3247, 1442, 7450, 2987, 7052, 989, 3696, 5686, 7148, 4784,
         3985, 3949, 1750, 9932, 8476, 7412, 1428, 7248, 7280, 5445, 5520, 2179, 9690, 9158, 9157, 6205, 2528, 6426,
         2884, 3856, 6711, 2425, 4917, 8011, 122, 2589, 8716, 6359, 6164, 5531, 7526, 3783, 9537, 4002, 2002, 8396,
         6433, 8238, 8701, 849, 7323, 7212, 8972, 4995, 8223, 2583, 8065, 2625, 1165, 8222, 8460, 3713, 6467, 6537,
         1122, 8859, 5769, 8986, 1303, 2938, 1796, 1867, 7026, 9332, 2784, 2424, 4484, 744, 1078, 7916, 264, 2440, 4312,
         7907, 1899, 1567, 6808, 5334, 5742, 9615, 5168, 6536, 3727, 8941, 6717, 7914, 7737, 6070, 2634, 3243, 1670,
         797, 970, 1686, 5476, 8370, 629, 5812, 1384, 2477, 3901, 5367, 2486, 9945, 7976, 343, 2107, 2144, 2989, 8680,
         3498, 151, 5771, 8692, 8738, 7144, 311, 9448, 2853, 3307, 7897, 4150, 6857, 9100, 1928, 5127, 1215, 2830, 5852,
         9325, 5921, 2963, 1370, 2445, 1204, 4723, 9589, 1875, 2172, 7931, 918, 3266, 2199, 2523, 4682, 9854, 1771,
         1671, 8272, 7967, 3073, 6994, 4579, 7360, 7854, 7057, 8899, 6010, 5438, 5918, 7928, 9432, 8658, 519, 3776,
         8609, 2310, 3642, 9674, 1535, 2080, 7725, 4174, 18, 633, 4043, 9812, 4403, 7090, 9677, 5287, 6753, 4855, 292,
         4011, 1560, 6065, 1370, 4500, 79, 3321, 1303, 2673, 5365, 8434, 5375, 4517, 5641, 9187, 9004, 9089, 3337, 2551,
         8876, 824, 7610, 3000, 3481, 4736, 1412, 6904, 6274, 5286, 9132, 4034, 2751, 9743, 7965, 3572, 7798, 8596,
         3309, 6128, 8309, 3719, 2735, 5375, 5321, 2125, 9916, 224, 362, 663, 8545, 1556, 1340, 5077, 6897, 678, 780,
         6445, 4330, 5170, 5750, 6120, 2078, 3202, 5899, 2254, 4100, 9768, 1944, 8483, 2907, 2584, 9120, 9608, 2771,
         3268, 7083, 5008, 4671, 5903, 2263, 6756, 9048, 3713, 4395, 5078, 592, 941, 4589, 9982, 1567, 3157, 2144, 9204,
         5567, 9957, 344, 2845, 7921, 6513, 8924, 4619, 9685, 9848, 5828, 2552, 5017, 2228, 6687, 2627, 8787, 8055,
         2506, 9297, 4066, 2826, 5306, 3197, 2593, 5127, 2423, 3141, 3486, 2232, 3265, 1471, 3575, 7139, 6810, 2626,
         4967, 1445, 6443, 4564, 9804, 2536, 5592, 3794, 6892, 6908, 3973, 4316, 5858, 4089, 3863, 2927, 9216, 7065,
         7060, 9095, 2096, 1862, 5938, 2367, 9907, 1678, 8182, 5464, 5477, 4734, 7360, 863, 5863, 8600, 513, 3610, 8856,
         6618, 4679, 2166, 3361, 2456, 8327, 580, 1583, 8036, 4070, 4641, 6225, 1222, 5210, 3764, 4806, 370, 4849, 7593,
         1951, 6441, 5419, 4977, 8859, 9483, 6807, 1659, 764, 9575, 467, 899, 3084, 3402, 3899, 8926, 625, 4807, 1496,
         7133, 3332, 6742, 9487, 4223, 6756, 8354, 7883, 8103, 4477, 9240, 5009, 5030, 160, 1972, 5282, 8635, 2724,
         7079, 8305, 3840, 4079, 2824, 1449, 6338, 5790, 7433, 8712, 2866, 7856, 4798, 6626, 8621, 1358, 6509, 685,
         4456, 1974, 1685, 9749, 207, 1995, 1655, 2077, 2487, 2090, 8921, 5355, 3366, 654, 6000, 1188, 4375, 3371, 6955,
         9513, 8905, 8600, 6983, 6970, 4300, 6701, 1367, 6576, 2489, 8516, 9237, 4934, 8485, 6958, 859, 3199, 27, 4493,
         4926, 739, 460, 7035, 5657, 4285, 2818, 2643, 9185, 840, 5436, 1516, 7947, 675, 1119, 9234, 1841, 3942, 2328,
         6246, 120, 4350, 2193, 7505, 3584, 8223, 4571, 610, 7428, 3525, 7653, 1988, 247, 6860, 8478, 1289, 537, 5221,
         2515, 8855, 1522, 5628, 8305, 3763, 6239, 2288, 2382, 8931, 8258, 4316, 4059, 3189, 7582, 7588, 2326, 3702,
         3514, 5149, 7396, 2704, 1270, 4410, 921, 4693, 4035, 6646, 5434, 4822, 4129, 117, 3810, 5958, 832, 3555, 989,
         3207, 5040, 9619, 4335, 2681, 702, 6331, 9365, 6606, 5148, 9074, 9854, 6101, 3546, 9008, 9377, 4246, 9652,
         4584, 3066, 9465, 4290, 3203, 3291, 5814, 7807, 3403, 4614, 8754, 8154, 9356, 4720, 9440, 8808, 2803, 7961,
         6198, 1690, 9505, 8330, 1848, 5313, 7890, 8216, 3109, 6017, 244, 6279, 6702, 4056, 4632, 3739, 1166, 9854,
         1792, 4058, 5422, 1440, 1970, 136, 94, 2699, 6254, 7452, 1944, 3472, 5107, 2293, 7336, 6014, 8119, 7752, 4077,
         6756, 4652, 3355, 7758, 9956, 6504, 7150, 8246, 5915, 6701, 2147, 2399, 8814, 7083, 3847, 3354, 3251, 1561,
         399, 2419, 43, 4412, 520, 268, 2171, 7501, 4092, 7721, 3872, 7425, 6130, 5463, 4726, 1584, 5405, 6128, 1222,
         3010, 6636, 337, 3984, 964, 5335, 5795, 372, 1380, 339, 1683, 8903, 6042, 7974, 6685, 4323, 4484, 5159]))
    print(s.maxSumDivThree([8, 1, 5, 7, 2, 9, 10, 19, 3, 2]))  # 66
    print(s.maxSumDivThree([7, 4, 10, 11, 5, 2]))  # 39
    print(s.maxSumDivThree([7, 4, 11, 5, 2]))  # 27
    print(s.maxSumDivThree([2, 19, 6, 16, 5, 10, 7, 4, 11, 6]))  # 84
    print(s.maxSumDivThree([1, 2, 3, 4, 4]))  # 12
    print(s.maxSumDivThree([3, 6, 5, 1, 8]))  # 18
    print(s.maxSumDivThree([4]))  # 0
